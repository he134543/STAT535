abs(x) > c,
2 * c * abs(x) - c^2,
x^2
)
)
}
mean_psi_regression <- function(b, data, c = 1) {
b1 = b[1]
b2 = b[2]
b3 = b[3]
Y = data$Q5
X = data$drainage_area
return( mean ( psi( Y - (b1 + b2 * log(X) ), c ) ) )
}
best = optim(par = c(1,1,1), mean_psi_regression, data = Q_A_df, c= 1)
best
psi <- function(x, c = 1) {
return (
ifelse(
abs(x) > c,
2 * c * abs(x) - c^2,
x^2
)
)
}
mean_psi_regression <- function(b, data, c = 1) {
b1 = b[1]
b2 = b[2]
b3 = b[3]
Y = data$Q5
X = data$drainage_area
return( mean ( psi( log(Y) - (b1 + b2 * X), c ) ) )
}
best = optim(par = c(1,1,1), mean_psi_regression, data = Q_A_df, c= 1)
best
psi <- function(x, c = 1) {
return (
ifelse(
abs(x) > c,
2 * c * abs(x) - c^2,
x^2
)
)
}
mean_psi_regression <- function(b, data, c = 1) {
b1 = b[1]
b2 = b[2]
Y = data$Q5
X = data$drainage_area
return( mean ( psi( log(Y) - (b1 + b2 * X), c ) ) )
}
best = optim(par = c(1,1), mean_psi_regression, data = Q_A_df, c= 1)
best
psi <- function(x, c = 1) {
return (
ifelse(
abs(x) > c,
2 * c * abs(x) - c^2,
x^2
)
)
}
mean_psi_regression <- function(b, data, c = 1) {
b1 = b[1]
b2 = b[2]
Y = data$Q5
X = data$drainage_area
return( mean ( psi( log(Y) - (b1 + b2 * log(X) ), c ) ) )
}
best = optim(par = c(1,1), mean_psi_regression, data = Q_A_df, c= 1)
best
new_df = Q_A_df %>%
mutate(log_drainage_area = log(drainage_area)) %>%
mutate(log_Q5_predict, log_drainage_area * 0.005087369 + 5.041639080)
new_df = Q_A_df %>%
mutate(log_drainage_area = log(drainage_area)) %>%
mutate(log_Q5_predict = log_drainage_area * 0.005087369 + 5.041639080)
new_df
new_df = Q_A_df %>%
mutate(log_drainage_area = log(drainage_area)) %>%
mutate(log_Q5 = log(Q5)) %>%
mutate(log_Q5_predict = log_drainage_area * 0.005087369 + 5.041639080)
new_df
female_cats <- MASS::cats[MASS::cats$Sex == "F", ]
n <- nrow(female_cats)
M <- 10000
skewness_bstp_sample <- ""
for (m in 1:M) {
bootstrap_sample_idx <- ""
bstp <- ""
skewness_bstp_sample[""] <- ""
}
# So, this distribution is the one from which we assume that our observed skewness
# was drawn from.
(plt <-
ggplot(data.frame(x = skewness_bstp_sample)) +
geom_histogram(aes(x = x, y = ..density..), color = "white"))
# without replacement. E.g.:
(ten_female_cats <- MASS::cats[MASS::cats$Sex == "F", ][32:41, ])
n <- nrow(ten_female_cats)
# When we have an entire data frame as our sample, the best way to generate a bootstrap sample is by sampling indices with
# replacement:
bootstrap_sample_idx <- sample(n, replace = TRUE)
# Note, of course, that some indices are repeated:
bootstrap_sample_idx
# The bootstrapped sample then looks like:
(bstp <- ten_female_cats[bootstrap_sample_idx, ])
# The second step is to compute a statistic of interest on the bootstrap sample, for
# instance, the amount of skewness in the distribution:
3 * (mean(bstp$Hwt) - median(bstp$Hwt)) / sd(bstp$Hwt)
# Repeat the above steps M times.
# These M draws of the statistic of interest then comprise its bootstrap distribution,
# which we can explore using `mean`, `sd`, `qauntile` or any other summary.
# Exercise: construct a bootstrap distribution of the Pearson skewness of female cats heart
# weight (M = 10000 draws).
female_cats <- MASS::cats[MASS::cats$Sex == "F", ]
n <- nrow(female_cats)
M <- 10000
skewness_bstp_sample <- ""
for (m in 1:M) {
bootstrap_sample_idx <- ""
bstp <- ""
skewness_bstp_sample[""] <- ""
}
# So, this distribution is the one from which we assume that our observed skewness
# was drawn from.
(plt <-
ggplot(data.frame(x = skewness_bstp_sample)) +
geom_histogram(aes(x = x, y = ..density..), color = "white"))
new_df = Q_A_df %>%
mutate(log_drainage_area = log(drainage_area)) %>%
mutate(log_Q5 = log(Q5)) %>%
mutate(log_Q5_predict = log_drainage_area * 0.005087369 + 5.041639080)
ggplot(new_df) +
geom_line(aes(x = log_drainage_area, y = log_Q5))
geom_point(axes(x = log_drainage_area, y = log_Q5_predict))
new_df = Q_A_df %>%
mutate(log_drainage_area = log(drainage_area)) %>%
mutate(log_Q5 = log(Q5)) %>%
mutate(log_Q5_predict = log_drainage_area * 0.005087369 + 5.041639080)
ggplot(new_df) +
geom_line(aes(x = log_drainage_area, y = log_Q5))
geom_point(aes(x = log_drainage_area, y = log_Q5_predict))
new_df = Q_A_df %>%
mutate(log_drainage_area = log(drainage_area)) %>%
mutate(log_Q5 = log(Q5)) %>%
mutate(log_Q5_predict = log_drainage_area * 0.005087369 + 5.041639080)
ggplot(new_df) +
geom_line(aes(x = log_drainage_area, y = log_Q5_predict))
geom_point(aes(x = log_drainage_area, y = log_Q5))
new_df = Q_A_df %>%
mutate(log_drainage_area = log(drainage_area)) %>%
mutate(log_Q5 = log(Q5)) %>%
mutate(log_Q5_predict = log_drainage_area * 0.005087369 + 5.041639080)
ggplot(new_df) +
geom_line(aes(x = log_drainage_area, y = log_Q5_predict))+
geom_point(aes(x = log_drainage_area, y = log_Q5))
new_df = Q_A_df %>%
mutate(log_drainage_area = log(drainage_area)) %>%
mutate(log_Q5 = log(Q5)) %>%
mutate(log_Q5_predict = log_drainage_area * 0.005087369 + 5.041639080)
ggplot(new_df) +
geom_line(aes(x = log_drainage_area, y = log_Q5_predict)) +
geom_point(aes(x = log_drainage_area, y = log_Q5))
psi <- function(x, c = 1) {
return (
ifelse(
abs(x) > c,
2 * c * abs(x) - c^2,
x^2
)
)
}
mean_psi_regression <- function(b, data, c = 1) {
b1 = b[1]
b2 = b[2]
Y = data$Q5
X = data$drainage_area
return( mean ( psi( log(Y) - (b1 + b2 * log(X) ), c ) ) )
}
best = optim(par = c(1,1), mean_psi_regression, data = Q_A_df, c= 1)
best
new_df = Q_A_df %>%
mutate(log_drainage_area = log(drainage_area)) %>%
mutate(log_Q5 = log(Q5)) %>%
mutate(log_Q5_predict = log_drainage_area * 0.8473919 + 2.1528075)
ggplot(new_df) +
geom_line(aes(x = log_drainage_area, y = log_Q5_predict)) +
geom_point(aes(x = log_drainage_area, y = log_Q5))
rsq <- function (x, y) cor(x, y) ^ 2
rsq(new_df$log_Q5, new_df$log_Q5_predict)
ggplot(Q_A_df, aes(x = drainage_area, y = Q5 )) + geom_point()
ggplot(Q_A_df, aes(x = drainage_area, y = Q50)) + geom_point()
ggplot(Q_A_df, aes(x = drainage_area, y = Q95)) + geom_point()
ggplot(Q_A_df, aes(x = log(drainage_area), y = log(Q50) )) + geom_point()
ggplot(Q_A_df, aes(log(drainage_area), y = log(Q95))) + geom_point()
ggplot(Q_A_df, aes(log(drainage_area), y = log(Q5))) + geom_point()
ggplot(Q_A_df, aes(log(drainage_area), y = log(Q5)))
+ geom_point()
ggplot(Q_A_df, aes(log(drainage_area), y = log(Q5))) + geom_point()
+ ggtitle("log(Drainage Area) vs log(Q5)")
ggplot(Q_A_df, aes(log(drainage_area), y = log(Q5))) + geom_point() + ggtitle("log(Drainage Area) vs log(Q5)")
# they are linear related when they were logged
ggplot(Q_A_df, aes(log(drainage_area), y = log(Q5))) + geom_point()
ggplot(Q_A_df, aes(x = log(drainage_area), y = log(Q50) )) + geom_point()
ggplot(Q_A_df, aes(log(drainage_area), y = log(Q95))) + geom_point()
psi <- function(x, c = 1) {
return (
ifelse(
abs(x) > c,
2 * c * abs(x) - c^2,
x^2
)
)
}
mean_psi_regression <- function(b, data, c = 1) {
b1 = b[1]
b2 = b[2]
Y = data$Q5
X = data$drainage_area
return( mean ( psi( log(Y) - (b1 + b2 * log(X) ), c ) ) )
}
best = optim(par = c(1,1), mean_psi_regression, data = Q_A_df, c= 1)
best
# Bootstrap
n <- nrow(Q_A_df)
M <- 10000
b0_bootstrap_sample <- numeric(M)
b1_bootstrap_sample <- numeric(M)
for (m in 1:M) {
bootstrap_sample_idx <- sample(n, replace = TRUE)
bstp <- Q_A_df[bootstrap_sample_idx, ]
b_psi_GD <- optim(c(0, 0), mean_psi_regression_helper, data = bstp)
b0_bootstrap_sample[m] <- b_psi_GD$par[1]
b1_bootstrap_sample[m] <- b_psi_GD$par[2]
}
psi <- function(x, c = 1) {
return (
ifelse(
abs(x) > c,
2 * c * abs(x) - c^2,
x^2
)
)
}
mean_psi_regression <- function(b, data, c = 1) {
b1 = b[1]
b2 = b[2]
Y = data$Q5
X = data$drainage_area
return( mean ( psi( log(Y) - (b1 + b2 * log(X) ), c ) ) )
}
mean_psi_regression_helper <- function(b, data, c = 1){
b0 = b[1]
b1 = b[2]
X = data$drainage_area
Y = data$Q5
return(mean_psi_regression(b = b, Y = Y, X =X, c = c))
}
# Bootstrap
n <- nrow(Q_A_df)
M <- 10000
b0_bootstrap_sample <- numeric(M)
b1_bootstrap_sample <- numeric(M)
for (m in 1:M) {
bootstrap_sample_idx <- sample(n, replace = TRUE)
bstp <- Q_A_df[bootstrap_sample_idx, ]
b_psi_GD <- optim(c(0, 0), mean_psi_regression_helper, data = bstp)
b0_bootstrap_sample[m] <- b_psi_GD$par[1]
b1_bootstrap_sample[m] <- b_psi_GD$par[2]
}
# Bootstrap
n <- nrow(Q_A_df)
M <- 10000
b0_bootstrap_sample <- numeric(M)
b1_bootstrap_sample <- numeric(M)
for (m in 1:M) {
bootstrap_sample_idx <- sample(n, replace = TRUE)
bstp <- Q_A_df[bootstrap_sample_idx, ]
b_psi_GD <- optim(c(0, 0), mean_psi_regression, data = bstp)
b0_bootstrap_sample[m] <- b_psi_GD$par[1]
b1_bootstrap_sample[m] <- b_psi_GD$par[2]
}
plt1 <- ggplot(data.frame(b0_bootstrap_sample), aes(b0_bootstrap_sample)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2)
plt1 <- ggplot(data.frame(b0_bootstrap_sample), aes(b0_bootstrap_sample)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2)
plt2 <- ggplot(data.frame(b1_bootstrap_sample), aes(b1_bootstrap_sample)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2)
mean(b0_bootstrap_sample)
mean(b1_bootstrap_sample)
plt1
plt2
plt1 <- ggplot(data.frame(b0_bootstrap_sample), aes(b0_bootstrap_sample)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2)
plt2 <- ggplot(data.frame(b1_bootstrap_sample), aes(b1_bootstrap_sample)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2)
mean(b0_bootstrap_sample)
mean(b1_bootstrap_sample)
plt1
plt2
alpha <- 0.05
bootstrap_CI_0 <- quantile(b0_bootstrap_sample, c(alpha/2, 1 - alpha/2))
plt2 + geom_vline(xintercept = bootstrap_CI_0, col = "blue")
alpha <- 0.05
bootstrap_CI_0 <- quantile(b0_bootstrap_sample, c(alpha/2, 1 - alpha/2))
plt1 + geom_vline(xintercept = bootstrap_CI_0, col = "blue")
alpha <- 0.05
bootstrap_CI_1 <- quantile(b1_bootstrap_sample, c(alpha/2, 1 - alpha/2))
plt2 + geom_vline(xintercept = bootstrap_CI_1, col = "blue")
# Bootstrap
n <- nrow(Q_A_df)
M <- 10000
b0_bootstrap_sample <- numeric(M)
b1_bootstrap_sample <- numeric(M)
for (m in 1:M) {
bootstrap_sample_idx <- sample(n/2, replace = TRUE)
bstp <- Q_A_df[bootstrap_sample_idx, ]
b_psi_GD <- optim(c(0, 0), mean_psi_regression, data = bstp)
b0_bootstrap_sample[m] <- b_psi_GD$par[1]
b1_bootstrap_sample[m] <- b_psi_GD$par[2]
}
plt1 <- ggplot(data.frame(b0_bootstrap_sample), aes(b0_bootstrap_sample)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2)
plt2 <- ggplot(data.frame(b1_bootstrap_sample), aes(b1_bootstrap_sample)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2)
mean(b0_bootstrap_sample)
mean(b1_bootstrap_sample)
plt1
plt2
alpha <- 0.05
bootstrap_CI_0 <- quantile(b0_bootstrap_sample, c(alpha/2, 1 - alpha/2))
plt1 + geom_vline(xintercept = bootstrap_CI_0, col = "blue")
alpha <- 0.05
bootstrap_CI_1 <- quantile(b1_bootstrap_sample, c(alpha/2, 1 - alpha/2))
plt2 + geom_vline(xintercept = bootstrap_CI_1, col = "blue")
plt1 <- ggplot(data.frame(b0_bootstrap_sample), aes(b0_bootstrap_sample)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2)
plt2 <- ggplot(data.frame(b1_bootstrap_sample), aes(b1_bootstrap_sample)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2)
mean(b0_bootstrap_sample)
mean(b1_bootstrap_sample)
plt1
plt2
Q_A_df
bootstrap_CI_1
mean(b1_bootstrap_sample)
mean(b0_bootstrap_sample)
new_df = Q_A_df %>%
mutate(log_darea = log(drainage_area)) %>%
mutate(logQ5 = log(Q5)) %>%
mutate(logQ95 = log(Q95)) %>%
mutate(logQ5_predicted_mean_optim =  best$par[1] + best$par[2] * log_darea) %>%
mutate(logQ5_predicted_mean =  mean(b0_bootstrap_sample) + mean(b1_bootstrap_sample) * log_darea) %>%
mutate(logQ5_predicted_25 =  bootstrap_CI_0[1] + mean(bootstrap_CI_1[2]) * log_darea) %>%
mutate(logQ5_predicted_975 =  bootstrap_CI_0[1] + mean(bootstrap_CI_1[2]) * log_darea)
ggplot(data = new_df, aes(x = log_darea, y = logQ5)) +
geom_point() +
geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_mean_optim), color = 'red') +
geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_mean), color = 'green') +
geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_25), color = 'blue') +
geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_975), color = 'black')
# Bootstrap
n <- nrow(Q_A_df)
M <- 10000
b0_bootstrap_sample <- numeric(M)
b1_bootstrap_sample <- numeric(M)
for (m in 1:M) {
bootstrap_sample_idx <- sample(n, replace = TRUE)
bstp <- Q_A_df[bootstrap_sample_idx, ]
b_psi_GD <- optim(c(0, 0), mean_psi_regression, data = bstp)
b0_bootstrap_sample[m] <- b_psi_GD$par[1]
b1_bootstrap_sample[m] <- b_psi_GD$par[2]
}
plt1 <- ggplot(data.frame(b0_bootstrap_sample), aes(b0_bootstrap_sample)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2)
plt2 <- ggplot(data.frame(b1_bootstrap_sample), aes(b1_bootstrap_sample)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2)
mean(b0_bootstrap_sample)
mean(b1_bootstrap_sample)
plt1
plt2
alpha <- 0.05
bootstrap_CI_0 <- quantile(b0_bootstrap_sample, c(alpha/2, 1 - alpha/2))
plt1 + geom_vline(xintercept = bootstrap_CI_0, col = "blue")
alpha <- 0.05
bootstrap_CI_1 <- quantile(b1_bootstrap_sample, c(alpha/2, 1 - alpha/2))
plt2 + geom_vline(xintercept = bootstrap_CI_1, col = "blue")
new_df = Q_A_df %>%
mutate(log_darea = log(drainage_area)) %>%
mutate(logQ5 = log(Q5)) %>%
mutate(logQ95 = log(Q95)) %>%
mutate(logQ5_predicted_mean_optim =  best$par[1] + best$par[2] * log_darea) %>%
mutate(logQ5_predicted_mean =  mean(b0_bootstrap_sample) + mean(b1_bootstrap_sample) * log_darea) %>%
mutate(logQ5_predicted_25 =  bootstrap_CI_0[1] + mean(bootstrap_CI_1[2]) * log_darea) %>%
mutate(logQ5_predicted_975 =  bootstrap_CI_0[1] + mean(bootstrap_CI_1[2]) * log_darea)
ggplot(data = new_df, aes(x = log_darea, y = logQ5)) +
geom_point() +
geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_mean_optim), color = 'red') +
geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_mean), color = 'green') +
geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_25), color = 'blue') +
geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_975), color = 'black')
new_df = Q_A_df %>%
mutate(log_darea = log(drainage_area)) %>%
mutate(logQ5 = log(Q5)) %>%
mutate(logQ95 = log(Q95)) %>%
mutate(logQ5_predicted_mean_optim =  best$par[1] + best$par[2] * log_darea) %>%
mutate(logQ5_predicted_mean =  mean(b0_bootstrap_sample) + mean(b1_bootstrap_sample) * log_darea) %>%
mutate(logQ5_predicted_25 =  bootstrap_CI_0[1] + mean(bootstrap_CI_1[2]) * log_darea) %>%
mutate(logQ5_predicted_975 =  bootstrap_CI_0[1] + mean(bootstrap_CI_1[2]) * log_darea)
ggplot(data = new_df, aes(x = log_darea, y = logQ5)) +
geom_point() +
geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_mean_optim), color = 'red') +
geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_mean), color = 'green') +
#geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_25), color = 'blue') +
#geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_975), color = 'black')
new_df = Q_A_df %>%
mutate(log_darea = log(drainage_area)) %>%
mutate(logQ5 = log(Q5)) %>%
mutate(logQ95 = log(Q95)) %>%
mutate(logQ5_predicted_mean_optim =  best$par[1] + best$par[2] * log_darea) %>%
mutate(logQ5_predicted_mean =  mean(b0_bootstrap_sample) + mean(b1_bootstrap_sample) * log_darea) %>%
mutate(logQ5_predicted_25 =  bootstrap_CI_0[1] + mean(bootstrap_CI_1[2]) * log_darea) %>%
mutate(logQ5_predicted_975 =  bootstrap_CI_0[1] + mean(bootstrap_CI_1[2]) * log_darea)
ggplot(data = new_df, aes(x = log_darea, y = logQ5)) +
geom_point() +
geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_mean_optim), color = 'red') +
geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_mean), color = 'green')
#geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_25), color = 'blue') +
#geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_975), color = 'black')
new_df = Q_A_df %>%
mutate(log_darea = log(drainage_area)) %>%
mutate(logQ5 = log(Q5)) %>%
mutate(logQ95 = log(Q95)) %>%
mutate(logQ5_predicted_mean_optim =  best$par[1] + best$par[2] * log_darea) %>%
mutate(logQ5_predicted_mean =  mean(b0_bootstrap_sample) + mean(b1_bootstrap_sample) * log_darea) %>%
mutate(logQ5_predicted_25 =  bootstrap_CI_0[1] + mean(bootstrap_CI_1[2]) * log_darea) %>%
mutate(logQ5_predicted_975 =  bootstrap_CI_0[1] + mean(bootstrap_CI_1[2]) * log_darea)
ggplot(data = new_df, aes(x = log_darea, y = logQ5)) +
geom_point() +
geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_mean_optim), color = 'red') +
geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_mean), color = 'green')
geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_25), color = 'blue') +
geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_975), color = 'black')
new_df = Q_A_df %>%
mutate(log_darea = log(drainage_area)) %>%
mutate(logQ5 = log(Q5)) %>%
mutate(logQ95 = log(Q95)) %>%
mutate(logQ5_predicted_mean_optim =  best$par[1] + best$par[2] * log_darea) %>%
mutate(logQ5_predicted_mean =  mean(b0_bootstrap_sample) + mean(b1_bootstrap_sample) * log_darea) %>%
mutate(logQ5_predicted_25 =  bootstrap_CI_0[1] + mean(bootstrap_CI_1[2]) * log_darea) %>%
mutate(logQ5_predicted_975 =  bootstrap_CI_0[1] + mean(bootstrap_CI_1[2]) * log_darea)
ggplot(data = new_df, aes(x = log_darea, y = logQ5)) +
geom_point() +
geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_mean_optim), color = 'red') +
geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_mean), color = 'green')
geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_25), color = 'orange') +
geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_975), color = 'black')
new_df = Q_A_df %>%
mutate(log_darea = log(drainage_area)) %>%
mutate(logQ5 = log(Q5)) %>%
mutate(logQ95 = log(Q95)) %>%
mutate(logQ5_predicted_mean_optim =  best$par[1] + best$par[2] * log_darea) %>%
mutate(logQ5_predicted_mean =  mean(b0_bootstrap_sample) + mean(b1_bootstrap_sample) * log_darea) %>%
mutate(logQ5_predicted_25 =  bootstrap_CI_0[1] + mean(bootstrap_CI_1[2]) * log_darea) %>%
mutate(logQ5_predicted_975 =  bootstrap_CI_0[1] + mean(bootstrap_CI_1[2]) * log_darea)
ggplot(data = new_df, aes(x = log_darea, y = logQ5)) +
geom_point() +
# geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_mean_optim), color = 'red') +
geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_mean), color = 'green')
geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_25), color = 'red') +
geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_975), color = 'black')
new_df = Q_A_df %>%
mutate(log_darea = log(drainage_area)) %>%
mutate(logQ5 = log(Q5)) %>%
mutate(logQ95 = log(Q95)) %>%
mutate(logQ5_predicted_mean_optim =  best$par[1] + best$par[2] * log_darea) %>%
mutate(logQ5_predicted_mean =  mean(b0_bootstrap_sample) + mean(b1_bootstrap_sample) * log_darea) %>%
mutate(logQ5_predicted_25 =  bootstrap_CI_0[1] + mean(bootstrap_CI_1[2]) * log_darea) %>%
mutate(logQ5_predicted_975 =  bootstrap_CI_0[1] + mean(bootstrap_CI_1[2]) * log_darea)
ggplot(data = new_df, aes(x = log_darea, y = logQ5)) +
geom_point() +
geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_mean_optim), color = 'red') +
geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_mean), color = 'green') +
geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_25), color = 'blue') +
geom_line(data = new_df, aes(x = log_darea, y = logQ5_predicted_975), color = 'black')
best = optim(par = c(1,1), mean_psi_regression, data = Q_A_df, c= 1)
best
best = optim(par = c(1,1), mean_psi_regression, data = Q_A_df, c= 1)
best
best = optim(par = c(1,1), mean_psi_regression, data = Q_A_df, c= 1)
best
best = optim(par = c(1,1), mean_psi_regression, data = Q_A_df, c= 1)
best
best = optim(par = c(1,1), mean_psi_regression, data = Q_A_df, c= 1)
best
best = optim(par = c(1,1), mean_psi_regression, data = Q_A_df, c= 1)
best
best = optim(par = c(1,1), mean_psi_regression, data = Q_A_df, c= 1)
best
best = optim(par = c(1,1), mean_psi_regression, data = Q_A_df, c= 1)
best
best = optim(par = c(1,1), mean_psi_regression, data = Q_A_df, c= 1)
best
best = optim(par = c(1,1), mean_psi_regression, data = Q_A_df, c= 1)
best
best = optim(par = c(1,1), mean_psi_regression, data = Q_A_df, c= 1)
best
best = optim(par = c(1,1), mean_psi_regression, data = Q_A_df, c= 1)
best
best = optim(par = c(1,1), mean_psi_regression, data = Q_A_df, c= 1)
best
